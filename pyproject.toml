[tool.poetry]
name = "notedx-sdk"
version = "0.1.0"
description = "Official Python SDK for the NoteDx API - a powerful medical note generation service"
authors = ["Technologies Medicales JLA Shiftpal inc."]
readme = "README.md"
packages = [{include = "notedx_sdk", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.31.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
coverage = "^7.4.0"
codecov = "^2.1.13"
requests-mock = "^1.11.0"
responses = "^0.24.1"
black = "^23.12.1"
isort = "^5.13.2"
flake8 = "^7.0.0"
mypy = "^1.8.0"
types-requests = "^2.31.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=notedx_sdk",
    "--cov-report=xml",
    "--cov-report=term-missing",
    "-v",
    "-ra"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests"
]

[tool.coverage.run]
source = ["notedx_sdk"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "raise ImportError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
    "pass"
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
    "*/__init__.py"
] 